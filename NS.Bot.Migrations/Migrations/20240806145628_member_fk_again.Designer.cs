// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NS.Bot.BuisnessLogic;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace NS.Bot.Migrations.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240806145628_member_fk_again")]
    partial class member_fk_again
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("NS.Bot.Shared.Entities.Group.GroupEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("GuildId")
                        .HasColumnType("bigint");

                    b.Property<long?>("Leader")
                        .HasColumnType("bigint");

                    b.Property<int>("Name")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("GuildId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("NS.Bot.Shared.Entities.Guild.GuildEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Guilds");
                });

            modelBuilder.Entity("NS.Bot.Shared.Entities.Guild.GuildMember", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("GroupId")
                        .HasColumnType("bigint");

                    b.Property<long?>("GuildId")
                        .HasColumnType("bigint");

                    b.Property<long>("MemberId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("GuildId");

                    b.HasIndex("MemberId");

                    b.ToTable("GuildMembers");
                });

            modelBuilder.Entity("NS.Bot.Shared.Entities.MemberEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<decimal>("DiscordId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal?>("SteamId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("NS.Bot.Shared.Entities.TicketEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<decimal>("ChannelId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long?>("GuildId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsFinished")
                        .HasColumnType("boolean");

                    b.Property<decimal>("MessageId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("GuildId");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("NS.Bot.Shared.Entities.TicketSettings", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("AdminTicketsCount")
                        .HasColumnType("bigint");

                    b.Property<long>("CuratorTicketsCount")
                        .HasColumnType("bigint");

                    b.Property<long?>("GuildId")
                        .HasColumnType("bigint");

                    b.Property<long>("HelperTicketsCount")
                        .HasColumnType("bigint");

                    b.Property<decimal>("NewAdminTicketsCategoryId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("NewAdminTicketsChannelId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("NewCuratorTicketsCategoryId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("NewCuratorTicketsChannelId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("NewHelperTicketsCategoryId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("NewHelperTicketsChannelId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("OldAdminTicketsCategory")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("OldCuratorTicketsCategory")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("OldHelperTicketsCategory")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("TicketLogs")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.HasIndex("GuildId");

                    b.ToTable("TicketSettings");
                });

            modelBuilder.Entity("NS.Bot.Shared.Entities.Group.GroupEntity", b =>
                {
                    b.HasOne("NS.Bot.Shared.Entities.Guild.GuildEntity", "Guild")
                        .WithMany()
                        .HasForeignKey("GuildId");

                    b.Navigation("Guild");
                });

            modelBuilder.Entity("NS.Bot.Shared.Entities.Guild.GuildMember", b =>
                {
                    b.HasOne("NS.Bot.Shared.Entities.Group.GroupEntity", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId");

                    b.HasOne("NS.Bot.Shared.Entities.Guild.GuildEntity", "Guild")
                        .WithMany()
                        .HasForeignKey("GuildId");

                    b.HasOne("NS.Bot.Shared.Entities.MemberEntity", "Member")
                        .WithMany()
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("Guild");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("NS.Bot.Shared.Entities.TicketEntity", b =>
                {
                    b.HasOne("NS.Bot.Shared.Entities.Guild.GuildEntity", "Guild")
                        .WithMany()
                        .HasForeignKey("GuildId");

                    b.Navigation("Guild");
                });

            modelBuilder.Entity("NS.Bot.Shared.Entities.TicketSettings", b =>
                {
                    b.HasOne("NS.Bot.Shared.Entities.Guild.GuildEntity", "Guild")
                        .WithMany()
                        .HasForeignKey("GuildId");

                    b.Navigation("Guild");
                });
#pragma warning restore 612, 618
        }
    }
}
